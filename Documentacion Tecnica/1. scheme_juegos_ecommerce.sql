DROP SCHEMA juegos_Ecommerce;
CREATE SCHEMA juegos_Ecommerce;

USE juegos_Ecommerce;

DROP TABLE IF EXISTS SUBSCRIPTION;
CREATE TABLE IF NOT EXISTS SUBSCRIPTION (
ID_SUBSCRIPTION INT PRIMARY KEY auto_increment,
TYPE varchar(20) NOT NULL,
DESCRIPTION varchar(99) ,
PRICE FLOAT NOT NULL,
STOCK INT NOT NULL DEFAULT 0,
CREATION_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);


DROP TABLE IF EXISTS CATEGORY;
CREATE TABLE IF NOT EXISTS CATEGORY(
ID_CATEGORY INT PRIMARY KEY AUTO_INCREMENT,
CLASSIFICATION VARCHAR(30),
CREATION_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS GAME;
CREATE TABLE IF NOT EXISTS GAME(
ID_GAME INT PRIMARY KEY auto_increment,
ID_CATEGORY INT NOT NULL,
NAME VARCHAR(30) NOT NULL,
DESCRIPTION varchar(100),
PRICE FLOAT NOT NULL,
STOCK INT NOT NULL DEFAULT 0,
RELEASE_DATE DATE NOT NULL,
CREATION_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY(ID_CATEGORY) REFERENCES CATEGORY(ID_CATEGORY)
);

DROP TABLE IF EXISTS USER;
CREATE TABLE IF NOT EXISTS USER (
DNI BIGINT PRIMARY KEY NOT NULL ,
FIRTS_NAME VARCHAR(30) NOT NULL,
LAST_NAME VARCHAR(30) NOT NULL,
DIRECTION VARCHAR(50) NOT NULL,
BIRTH_DATE date NOT NULL,
AGE INT NOT NULL,
TELF bigint NOT NULL,
MAIL VARCHAR(30) NOT NULL ,
CREATION_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS BILL_USER_GAME;
CREATE TABLE IF NOT EXISTS BILL_USER_GAME(
ID_BILL_USERG INT PRIMARY KEY AUTO_INCREMENT,
TOTAL_PRICE decimal(8,2) NOT NULL,
TOTAL_QUANTITY INT,
CREATION_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS ORDER_GAME;
CREATE TABLE IF NOT EXISTS ORDER_GAME(
ID_ORDER_GAME BIGINT PRIMARY KEY AUTO_INCREMENT,
ID_GAME INT NOT NULL,
ID_USER BIGINT NOT NULL,
ID_BILL_USERG INT NOT NULL,
QUANTITY INT,
PRICE FLOAT NOT NULL,
CREATION_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
foreign key(ID_BILL_USERG) references BILL_USER_GAME(ID_BILL_USERG),
foreign key(ID_GAME) REFERENCES GAME(ID_GAME) ,
foreign key(ID_USER) REFERENCES USER(DNI) 
);

DROP TABLE IF EXISTS BILL_SUSCRIPTION;
CREATE TABLE IF NOT EXISTS BILL_SUSCRIPTION(
ID_BILL_SUS INT PRIMARY KEY AUTO_INCREMENT,
TOTAL_PRICE decimal(8,2) NOT NULL,
TOTAL_QUANTITY INT,
CREATION_DATE DATETIME DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS ORDER_SUSCRIPTION;
CREATE TABLE IF NOT EXISTS ORDER_SUSCRIPTION(
ID_ORDER_SUS BIGINT PRIMARY KEY AUTO_INCREMENT,
ID_SUBSCRIPTION INT NOT NULL,
ID_USER BIGINT NOT NULL,
ID_BILL_SUS INT NOT NULL,
QUANTITY INT,
PRICE FLOAT NOT NULL,
CREATION_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
foreign key(ID_SUBSCRIPTION) REFERENCES SUBSCRIPTION(ID_SUBSCRIPTION),
foreign key(ID_USER) REFERENCES USER(DNI),
foreign key(ID_BILL_SUS) REFERENCES BILL_SUSCRIPTION(ID_BILL_SUS)
);

-- TABLA LOG PARA AUDITORIA DE TABLA ORDER_GAME
DROP TABLE IF EXISTS LOG_ORDER_GAME;
CREATE TABLE IF NOT EXISTS LOG_ORDER_GAME(
ID_LOG INT PRIMARY KEY AUTO_INCREMENT,
ID_ORDER_GAME INT NOT NULL,
ID_GAME INT NOT NULL,
ID_USER INT NOT NULL,
ID_BILL_USERG INT NOT NULL,
QUANTITY INT,
USER VARCHAR(30),
ACCION VARCHAR(20),
DATE DATE,
TIME TIME
);

-- TABLA LOG PARA AUDITORIA DE TABLA GAME
DROP TABLE IF EXISTS LOG_GAME;
CREATE TABLE IF NOT EXISTS LOG_GAME(
ID_LOG INT PRIMARY KEY AUTO_INCREMENT,
ID_GAME INT NOT NULL ,
ID_CATEGORY INT ,
NAME VARCHAR(30),
DESCRIPTION varchar(100),
PRICE DOUBLE,
STOCK INT ,
RELEASE_DATE DATE,
USER VARCHAR(30),
ACCION VARCHAR(20),
DATE DATE,
TIME TIME
);




